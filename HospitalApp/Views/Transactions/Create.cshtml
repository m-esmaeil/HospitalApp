@model HospitalApp.ViewModel.TransactionsVM

@{
    ViewData["Title"] = "Create";
}

<h3 class="jumbotron p-4 text-right font-weight-bold text-white text-center" style="background-color: #4189c7;">
    انشاء قيد جديد
    <i class="fas fa-edit"></i>
</h3>

<div dir="rtl">
    <div class="col-md-8 shadow border-0 rounded-lg mx-auto p-3">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- head of entry journal -->
            <div class="form-row">
                <div class="input-group col-md-6" dir="rtl">
                    <div class="input-group-append d-block">
                        <span class="input-group-text">رقم القيد</span>
                    </div>
                    <input type="text" disabled class="form-control text-center" value="@ViewBag.EntriesNum" />
                   
                </div>
                <div class="form-group col-md-6">
                    <input type="datetime-local" asp-for="DateVM" class="form-control col-12" id="input-date" />
                    <span asp-validation-for="DateVM" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="form-inline col-12">
                    <input type="text" asp-for="Description" class="form-control col-12" placeholder="وصف القيد" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="container mt-3"></div>

            <!-- row to add items of entry journal ??? -->
            <div class="form-row rowCount" id="test" name="row-n[i]">
                <div class="form-inline mt-2 col-5">
                    <select id="dataOptions" name="account[]" asp-for="AccountTreeIdVM"
                            class="js-example-basic-single form-control shadow border-secondary col-12 items-name">

                        @foreach (var item in Model.AccountsTreeList)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                    <span asp-validation-for="AccountTreeIdVM" class="text-danger"></span>
                </div>
                <div class="form-inline mt-2 col-3">
                    <input type="text" onchange="getBalance()" class="form-control shadow border-secondary col-12 debit" placeholder="مدين" name="debit[]" />
                    <span asp-validation-for="ValueDebit" class="text-danger"></span>
                </div>
                <div class="form-inline mt-2 col-3">
                    <input type="text" onchange="getBalance()" class="form-control shadow border-secondary col-12 credit" placeholder="دائن" name="credit[]" />
                    <span asp-validation-for="ValueCredit" class="text-danger"></span>
                </div>
                <div class="form-inline mt-2 col-1">
                    <i class="fas fa-plus-circle text-primary font-bold add-row" style="font-size:20px; cursor:pointer;"></i>
                </div>
            </div>

            <!-- Row To Display Balnce of Entry -->
            <div class="form-row mt-3">
                <div class="form-inline mt-3 col-5">
                    <input type="text" id="BalanceMSG" value="0" disabled class="border-0 text-danger col-12" />
                </div>
                <div class="form-inline mt-3 col-3">
                    <input type="number" id="BalanceDebit" value="0" disabled class="form-control border-danger shadow col-12 d-none" />
                </div>
                <div class="form-inline mt-3 col-3">
                    <input type="number" id="BalanceCredit" value="0" disabled class="form-control border-danger shadow col-12 d-none" />
                </div>
                <div class="form-inline mt-3 col-1 d-none"></div>
            </div>

            <!-- Row of Actions -->
            <div class="form-inline mt-5 d-flex justify-content-around p-0">
                <a asp-action="Index" class="btn btn-secondary mr-0" style="width:48%;">Back to List <i class="fas fa-home"></i></a>
                <button type="submit" class="btn btn-primary ml-0" style="width:48%;">Save <i class="fas fa-save"></i></button>
            </div>
        </form>
    </div>
</div>

<!-- Template To Add Row -->
<div id="templateRow" style="display:none;">
    <div class="form-row rowCount" id="template" name="row-n[i]">
        <div class="form-inline mt-2 col-md-5">
            <select asp-for="AccountTreeIdVM" class="form-control shadow border-secondary col-12 items-name js-example-basic-single" name="account[]">

                @foreach (var item in Model.AccountsTreeList)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
            <span asp-validation-for="AccountTreeIdVM" class="text-danger"></span>
        </div>
        <div class="form-inline mt-2 col-3">
            <input type="text" value="" onchange="getBalance()" class="form-control shadow border-secondary col-12 debit" placeholder="مدين" name="debit[]" />
            <span asp-validation-for="ValueDebit" class="text-danger"></span>
        </div>
        <div class="form-inline mt-2 col-3">
            <input type="text" value="" onchange="getBalance()" class="form-control shadow border-secondary col-12 credit" placeholder="دائن" name="credit[]" />
            <span asp-validation-for="ValueCredit" class="text-danger"></span>
        </div>
        <div class="form-inline mt-2 col-1">
            <i class="fas fa-plus-circle text-primary font-bold add-row" style="font-size:20px; cursor:pointer;"></i>
            <i class="fas fa-trash text-danger font-bold mr-2 del-row" style="font-size:20px; cursor:pointer;"></i>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script>
        // functin to use Select2 libirary
        $(document).on('focus', 'select', function () {
            $(this).select2({
                placeholder: 'اسم الحساب'
            });
        });

        $("#input-date").datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            clear: true,
            startDate: new Date("01/01/2020"),
            endDate: new Date.now()
        });

    // function re-arrange row's Id
    function reArrangeRows() {

        let itemRows = document.querySelectorAll(".rowCount");
        let selectItems = document.querySelectorAll(".item-name");

        for (var i = 0; i <= itemRows.length - 1; i++) {

            itemRows[i].id = "row-n-" + i;

            selectItems[i].id = "item-name-" + i;

            /*$("#row-n-" + i).children("select").id = "row-n-" + i;*/
        }
    }

    // function to add/remove row of journal entry
    $(function () {
        $(document).on("click", ".add-row", function () {

            var Row2Add = $("#templateRow").html();

            $(this).parent().parent().after(Row2Add);

            reArrangeRows();
        });

        $(document).on("click", ".del-row", function () {

            $(this).parent().parent().remove();

            reArrangeRows();
        });
    });

    // function to have balance between input debit and credit
    function getBalance() {

        var sumDebit = document.querySelectorAll('.debit');
        var debitToT = 0;

        for (var i = 0; i < sumDebit.length; i++) {

            if (parseInt(sumDebit[i].value)) {

                debitToT += parseInt(sumDebit[i].value);
            }
        }

        var sumCredit = document.querySelectorAll(".credit");
        var creditToT = 0;

        for (var d = 0; d < sumCredit.length; d++) {

            if (parseInt(sumCredit[d].value)) {

                creditToT += parseInt(sumCredit[d].value);
            }
        }

        var Balance = debitToT - creditToT;
        var BalanceCr = creditToT - debitToT;

        if (debitToT > creditToT) {

            document.getElementById("BalanceMSG").value = "القيد غير متوازن";
            document.getElementById("BalanceDebit").value = Balance;
            document.getElementById("BalanceCredit").value = 0;
            document.getElementById("BalanceDebit").classList.remove("d-none");
            document.getElementById("BalanceCredit").classList.add("d-none");
            document.getElementById("BalanceMSG").classList.add("text-danger");
            document.getElementById("BalanceMSG").classList.remove("text-success");
            return false;

        } if (creditToT > debitToT) {

            document.getElementById("BalanceMSG").value = "القيد غير متوازن";
            document.getElementById("BalanceCredit").value = BalanceCr;
            document.getElementById("BalanceDebit").value = 0;
            document.getElementById("BalanceCredit").classList.remove("d-none");
            document.getElementById("BalanceDebit").classList.add("d-none");
            document.getElementById("BalanceMSG").classList.add("text-danger");
            document.getElementById("BalanceMSG").classList.remove("text-success");
            return false;
        } else {
            document.getElementById("BalanceDebit").value = 0;
            document.getElementById("BalanceCredit").value = 0;
            document.getElementById("BalanceCredit").classList.add("d-none");
            document.getElementById("BalanceDebit").classList.add("d-none");
            document.getElementById("BalanceMSG").value = "قيد صحيح !!";
            document.getElementById("BalanceMSG").classList.remove("text-danger");
            document.getElementById("BalanceMSG").classList.add("text-success");
        }
    };

    // for use in the future but not use in this app
    // function to make array of object from list input (name, credit, debit)


    @*function sendByAjax() {
        var info = {
            account: $("form select[name='account[]']").map(function () { return this.value }).get(),
            debit: $("form input[name='debit[]']").map(function () { return this.value }).get(),
            credit: $("form input[name='credit[]']").map(function () { return this.value }).get(),
            __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
        }

        $.ajax({
            type: 'post',
            data: info,
            url: '@Url.Action("Create")',
            success: function (result) {
                console.log(result);
            }
        })
    }*@



    @*function listOfObj() {

        let itemNameList = document.getElementsByName("item-name");
        let itemDebitList = document.getElementsByName("item-debit");
        let itemCreditList = document.getElementsByName("item-credit");

        let itemNames = [], itemDebits = [], itemCredits = [];

        for (var i = 0; i < itemNameList.length; i++) {
            itemNames.push(document.getElementsByTagName("select")[i].value);
            itemDebits.push(itemDebitList[i].value);
            itemCredits.push(itemCreditList[i].value);
        }

        let objArr = itemNames.map((item, index) => {
            return {
                name: item,
                debitVAl: itemDebits[index],
                creditVal: itemCredits[index]
            }
        });

        $.ajax({
            url: '@Url.Action("Create", "Transactions")',
            type: 'post',
            data: {
                objData: objArr
            }
        })
    }*@



    </script>

}
