// <auto-generated />
using System;
using HospitalApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210815055203_modifyDecimalInTRansaction")]
    partial class modifyDecimalInTRansaction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalApp.Models.AccountsTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("FollowTo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccountsTree");
                });

            modelBuilder.Entity("HospitalApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HospitalApp.Models.EntriesSerialize", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Serial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("EntriesSerialize");
                });

            modelBuilder.Entity("HospitalApp.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountTreeId")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumberId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValuDebit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ValueCredit")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTreeId");

                    b.HasIndex("SerialNumberId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("HospitalApp.Models.AccountsTree", b =>
                {
                    b.HasOne("HospitalApp.Models.Category", "Categories")
                        .WithMany("AccountsTree")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_AccountsTree_Categories")
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("HospitalApp.Models.Transaction", b =>
                {
                    b.HasOne("HospitalApp.Models.AccountsTree", "AccountsTree")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountTreeId")
                        .HasConstraintName("FK_Transactions_AccountsTree")
                        .IsRequired();

                    b.HasOne("HospitalApp.Models.EntriesSerialize", "entriesSerialize")
                        .WithMany("Transactions")
                        .HasForeignKey("SerialNumberId")
                        .HasConstraintName("FK_Transactions_EntriesSerialize")
                        .IsRequired();

                    b.Navigation("AccountsTree");

                    b.Navigation("entriesSerialize");
                });

            modelBuilder.Entity("HospitalApp.Models.AccountsTree", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("HospitalApp.Models.Category", b =>
                {
                    b.Navigation("AccountsTree");
                });

            modelBuilder.Entity("HospitalApp.Models.EntriesSerialize", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
